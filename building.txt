Prerequisites:
- Windows Vista or later (The built code can run on XP, but your build machine must be Vista or later. This is a limitation of Visual Studio 2013.)
- Visual Studio (C++) 2013. Update 4 is currently used. Express Edition, Community Edition, or one of the commercial editions should all work fine. (Currently built using community edition.)
- Cygwin. I am not sure of the exact packages, but perl and git are 2 of them. Only 32-bit Cygwin has been tested.
- Python 2.7.x (2.7.9 used)
- lxml python bindings for Python 2.7.x (3.3.x used, https://pypi.python.org/pypi/lxml/)
- Mako for Python 2.7 (as administrator: `pip install mako`. pip.exe is under c:\Python27\Scripts\ by default.)
- Make sure python 2.7 (not 3.2) is in the environment PATH
- Python 3 (3.2.x used: http://www.python.org/)
- lxml python bindings for Python 3.2.x (3.3.x used, https://pypi.python.org/pypi/lxml/)
- Set the Env Var PYTHON3 to the path to your Python 3 python.exe . For example, C:\Python32\python.exe
- Gnuwin32 gperf, gawk, gzip, flex, bison (and it's dependancies), sed (and it's dependancies (http://gnuwin32.sourceforge.net/)
- nasm (http://nasm.sourceforge.net). Make sure the nasm directory is in your path
- Make sure that the gnuwin32 binaries are in a directory path with no spaces, like 'C:\gnuwin32\bin'
- Make sure the environment PATH includes the directory where the gnuwin32 binaries are
- To build the installer: NSIS Unicode
- To build the installer, make sure NSIS Unicode is in the path (e.g. C:\Program Files (x86)\NSIS\Unicode)
- If you are on 32-bit Windows instead of 64-bit like I am, edit setvcenv.sh for the 32-bit folder path differences

Open up cygwin's bash shell and cd to the top directory
Run the command `./buildall.sh`. This will build everything including the installer.
The 64-bit version will not be built and the 64-bit installer will fail. This is a limitation this XP compatible branch. Patches are welcome.

To clean the project tree (uses git) go to the top directory at a cygwin bash shell
and type in `git clean -dfx`

