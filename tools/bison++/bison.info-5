This is bison.info, produced by makeinfo version 4.1 from bison.texinfo.

START-INFO-DIR-ENTRY
* bison: (bison).	GNU Project parser generator (yacc replacement).
END-INFO-DIR-ENTRY

   This file documents the Bison parser generator.

   Copyright (C) 1988, 89, 90, 91, 92, 93, 95, 98, 1999 Free Software
Foundation, Inc.

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided also
that the sections entitled "GNU General Public License" and "Conditions
for Using Bison" are included exactly as in the original, and provided
that the entire resulting derived work is distributed under the terms
of a permission notice identical to this one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that the sections entitled "GNU General Public
License", "Conditions for Using Bison" and this permission notice may be
included in translations approved by the Free Software Foundation
instead of in the original English.


File: bison.info,  Node: Index,  Prev: Glossary,  Up: Top

Index
*****

* Menu:

* $$:                                    Actions.
* $N:                                    Actions.
* %expect:                               Expect Decl.
* %left:                                 Using Precedence.
* %nonassoc:                             Using Precedence.
* %prec:                                 Contextual Precedence.
* %pure_parser:                          Pure Decl.
* %right:                                Using Precedence.
* %start:                                Start Decl.
* %token:                                Token Decl.
* %type:                                 Type Decl.
* %union:                                Union Decl.
* @N:                                    Action Features.
* action:                                Actions.
* action data types:                     Action Types.
* action features summary:               Action Features.
* actions in mid-rule:                   Mid-Rule Actions.
* actions, semantic:                     Semantic Actions.
* additional C code section:             C Code.
* algorithm of parser:                   Algorithm.
* associativity:                         Why Precedence.
* Backus-Naur form:                      Language and Grammar.
* Bison declaration summary:             Decl Summary.
* Bison declarations:                    Declarations.
* Bison declarations (introduction):     Bison Declarations.
* Bison grammar:                         Grammar in Bison.
* Bison invocation:                      Invocation.
* Bison parser:                          Bison Parser.
* Bison parser algorithm:                Algorithm.
* Bison symbols, table of:               Table of Symbols.
* Bison utility:                         Bison Parser.
* BNF:                                   Language and Grammar.
* C code, section for additional:        C Code.
* C declarations section:                C Declarations.
* C-language interface:                  Interface.
* calc:                                  Infix Calc.
* calculator, infix notation:            Infix Calc.
* calculator, multi-function:            Multi-function Calc.
* calculator, simple:                    RPN Calc.
* character token:                       Symbols.
* compiling the parser:                  Rpcalc Compile.
* conflicts:                             Shift/Reduce.
* conflicts, reduce/reduce:              Reduce/Reduce.
* conflicts, suppressing warnings of:    Expect Decl.
* context-dependent precedence:          Contextual Precedence.
* context-free grammar:                  Language and Grammar.
* controlling function:                  Rpcalc Main.
* dangling else:                         Shift/Reduce.
* data types in actions:                 Action Types.
* data types of semantic values:         Value Type.
* debugging:                             Debugging.
* declaration summary:                   Decl Summary.
* declarations, Bison:                   Declarations.
* declarations, Bison (introduction):    Bison Declarations.
* declarations, C:                       C Declarations.
* declaring literal string tokens:       Token Decl.
* declaring operator precedence:         Precedence Decl.
* declaring the start symbol:            Start Decl.
* declaring token type names:            Token Decl.
* declaring value types:                 Union Decl.
* declaring value types, nonterminals:   Type Decl.
* default action:                        Actions.
* default data type:                     Value Type.
* default stack limit:                   Stack Overflow.
* default start symbol:                  Start Decl.
* defining language semantics:           Semantics.
* else, dangling:                        Shift/Reduce.
* error:                                 Error Recovery.
* error recovery:                        Error Recovery.
* error recovery, simple:                Simple Error Recovery.
* error reporting function:              Error Reporting.
* error reporting routine:               Rpcalc Error.
* examples, simple:                      Examples.
* exercises:                             Exercises.
* file format:                           Grammar Layout.
* finite-state machine:                  Parser States.
* formal grammar:                        Grammar in Bison.
* format of grammar file:                Grammar Layout.
* glossary:                              Glossary.
* grammar file:                          Grammar Layout.
* grammar rule syntax:                   Rules.
* grammar rules section:                 Grammar Rules.
* grammar, Bison:                        Grammar in Bison.
* grammar, context-free:                 Language and Grammar.
* grouping, syntactic:                   Language and Grammar.
* infix notation calculator:             Infix Calc.
* interface:                             Interface.
* introduction:                          Introduction.
* invoking Bison:                        Invocation.
* invoking Bison under VMS:              VMS Invocation.
* LALR(1):                               Mystery Conflicts.
* language semantics, defining:          Semantics.
* layout of Bison grammar:               Grammar Layout.
* left recursion:                        Recursion.
* lexical analyzer:                      Lexical.
* lexical analyzer, purpose:             Bison Parser.
* lexical analyzer, writing:             Rpcalc Lexer.
* lexical tie-in:                        Lexical Tie-ins.
* literal string token:                  Symbols.
* literal token:                         Symbols.
* look-ahead token:                      Look-Ahead.
* LR(1):                                 Mystery Conflicts.
* main function in simple example:       Rpcalc Main.
* mfcalc:                                Multi-function Calc.
* mid-rule actions:                      Mid-Rule Actions.
* multi-character literal:               Symbols.
* multi-function calculator:             Multi-function Calc.
* mutual recursion:                      Recursion.
* nonterminal symbol:                    Symbols.
* operator precedence:                   Precedence.
* operator precedence, declaring:        Precedence Decl.
* options for invoking Bison:            Invocation.
* overflow of parser stack:              Stack Overflow.
* parse error:                           Error Reporting.
* parser:                                Bison Parser.
* parser stack:                          Algorithm.
* parser stack overflow:                 Stack Overflow.
* parser state:                          Parser States.
* polish notation calculator:            RPN Calc.
* precedence declarations:               Precedence Decl.
* precedence of operators:               Precedence.
* precedence, context-dependent:         Contextual Precedence.
* precedence, unary operator:            Contextual Precedence.
* preventing warnings about conflicts:   Expect Decl.
* pure parser:                           Pure Decl.
* recovery from errors:                  Error Recovery.
* recursive rule:                        Recursion.
* reduce/reduce conflict:                Reduce/Reduce.
* reduction:                             Algorithm.
* reentrant parser:                      Pure Decl.
* reverse polish notation:               RPN Calc.
* right recursion:                       Recursion.
* rpcalc:                                RPN Calc.
* rule syntax:                           Rules.
* rules section for grammar:             Grammar Rules.
* running Bison (introduction):          Rpcalc Gen.
* semantic actions:                      Semantic Actions.
* semantic value:                        Semantic Values.
* semantic value type:                   Value Type.
* shift/reduce conflicts:                Shift/Reduce.
* shifting:                              Algorithm.
* simple examples:                       Examples.
* single-character literal:              Symbols.
* stack overflow:                        Stack Overflow.
* stack, parser:                         Algorithm.
* stages in using Bison:                 Stages.
* start symbol:                          Language and Grammar.
* start symbol, declaring:               Start Decl.
* state (of parser):                     Parser States.
* string token:                          Symbols.
* summary, action features:              Action Features.
* summary, Bison declaration:            Decl Summary.
* suppressing conflict warnings:         Expect Decl.
* symbol:                                Symbols.
* symbol table example:                  Mfcalc Symtab.
* symbols (abstract):                    Language and Grammar.
* symbols in Bison, table of:            Table of Symbols.
* syntactic grouping:                    Language and Grammar.
* syntax error:                          Error Reporting.
* syntax of grammar rules:               Rules.
* terminal symbol:                       Symbols.
* token:                                 Language and Grammar.
* token type:                            Symbols.
* token type names, declaring:           Token Decl.
* tracing the parser:                    Debugging.
* unary operator precedence:             Contextual Precedence.
* using Bison:                           Stages.
* value type, semantic:                  Value Type.
* value types, declaring:                Union Decl.
* value types, nonterminals, declaring:  Type Decl.
* value, semantic:                       Semantic Values.
* VMS:                                   VMS Invocation.
* warnings, preventing:                  Expect Decl.
* writing a lexical analyzer:            Rpcalc Lexer.
* YYABORT:                               Parser Function.
* YYACCEPT:                              Parser Function.
* YYBACKUP:                              Action Features.
* yychar:                                Look-Ahead.
* yyclearin:                             Error Recovery.
* yydebug:                               Debugging.
* YYDEBUG:                               Debugging.
* YYEMPTY:                               Action Features.
* yyerrok:                               Error Recovery.
* YYERROR:                               Action Features.
* yyerror:                               Error Reporting.
* YYERROR_VERBOSE:                       Error Reporting.
* YYINITDEPTH:                           Stack Overflow.
* yylex:                                 Lexical.
* YYLEX_PARAM:                           Pure Calling.
* yylloc:                                Token Positions.
* YYLTYPE:                               Token Positions.
* yylval:                                Token Values.
* YYMAXDEPTH:                            Stack Overflow.
* yynerrs:                               Error Reporting.
* yyparse:                               Parser Function.
* YYPARSE_PARAM:                         Pure Calling.
* YYPRINT:                               Debugging.
* YYRECOVERING:                          Error Recovery.
* |:                                     Rules.


