.\" $Xorg: MenuButton,v 1.3 2000/08/17 19:42:27 cpqbld Exp $
.NH 2
MenuButton Widget
.XS
	MenuButton Widget
.XE
.IN "MenuButton widget" "" "@DEF@"
.sp
.Ds 0
.TA 2.0i
.ta 2.0i
Application Header file	<X11/Xaw/MenuButton.h>
.IN "MenuButton.h" ""
Class Header file	<X11/Xaw/MenuButtonP.h>
.IN "MenuButtonP.h" ""
Class		menuButtonWidgetClass
.IN "menuButtonWidgetClass" ""
Class Name	MenuButton
.IN "MenuButton widget" "class name"
Superclass	Command
.De
.LP
.sp
The MenuButton widget is an area, often rectangular,
that displays a graphic.  The graphic may be a text
string containing multiple lines of characters in an 8
bit or 16 bit character set (to be displayed with a
\fIfont\fP), or in a multi-byte encoding (for use with
a \fIfontset\fP).  The graphic may also be a bitmap or
pixmap.
.LP
When the pointer cursor is on a MenuButton widget, the
MenuButton becomes highlighted by drawing a rectangle
around its perimeter.  This highlighting indicates
that the MenuButton is ready for selection.  When a
pointer button is pressed, the MenuButton widget will
pop up the menu named in the \fBmenuName\fP resource.
.NH 3
Resources
.LP
When creating a MenuButton widget instance,
the following resources are retrieved from the argument list
or from the resource database:
.LP
.IN "MenuButton widget" "resources"
.TS H
expand;
lw(1i) lw(1i) lw(1i) lw(.5i) lw(2i).
_
.sp 3p
.TB
Name	Class	Type	Notes	Default Value
.sp 3p
_
.TH
.R
.sp 3p
accelerators	Accelerators	AcceleratorTable		NULL
ancestorSensitive	AncestorSensitive	Boolean	D	True
background	Background	Pixel		XtDefaultBackground
backgroundPixmap	Pixmap	Pixmap		XtUnspecifiedPixmap
bitmap	Bitmap	Pixmap		None
borderColor	BorderColor	Pixel		XtDefaultForeground
borderPixmap	Pixmap	Pixmap		XtUnspecifiedPixmap
borderWidth	BorderWidth	Dimension		1
callback	Callback	XtCallbackList		NULL
colormap	Colormap	Colormap		Parent's Colormap
cornerRoundPercent	CornerRoundPercent	Dimension		25
cursor	Cursor	Cursor		None
cursorName	Cursor	String		None
depth	Depth	int	C	Parent's Depth
destroyCallback	Callback	XtCallbackList		NULL
encoding	Encoding	UnsignedChar		XawTextEncoding8bit
font	Font	XFontStruct		XtDefaultFont
fontSet	FontSet	XFontSet		XtDefaultFontSet
foreground	Foreground	Pixel		XtDefaultForeground
height	Height	Dimension	A	graphic height + 2 * \fBinternalHeight\fP
highlightThickness	Thickness	Dimension	A	2 (0 if Shaped)
insensitiveBorder	Insensitive	Pixmap		GreyPixmap
internalHeight	Height	Dimension		2
internalWidth	Width	Dimension		4
international	International	Boolean	C	False
justify	Justify	Justify		XtJustifyCenter (center)
label	Label	String		name of widget
leftBitmap	LeftBitmap	Bitmap		None
mappedWhenManaged	MappedWhenManaged	Boolean		True
menuName	MenuName	String		"menu"
pointerColor	Foreground	Pixel		XtDefaultForeground
pointerColorBackground	Background	Pixel		XtDefaultBackground
resize	Resize	Boolean		True
screen	Screen	Screen	R	Parent's Screen
sensitive	Sensitive	Boolean		True
shapeStype	ShapeStyle	ShapeStyle		Rectangle
translations	Translations	TranslationTable		See below
width	Width	Dimension	A	graphic width + 2 * \fBinternalWidth\fP
x	Position	Position		0
y	Position	Position		0
.sp 3p
_
.TE
.Ac
.As
.Bg
.Gp
.Bm
.Bc
.Bp
.Bw
.Cb
.Cm
.Cr
.Cu
.Cn
.Dp
.Dc
.Lf
.Ls
.Lg
.Hw
.Ht
.Ib
.Ih
.In
.Ju
.La
.Mm
.IP \fBmenuName\fP 1.5i
The name of a popup shell to popup as a menu.  The MenuButton
will search for this name using \fBXtNameToWidget\fP starting
with itself as the reference widget.  If the search is
unsuccessful the widget will continue up the widget tree using
each of its ancestors as the reference widget passed to
\fBXtNameToWidget\fP.  If no widget of called \fBmenuName\fP is
found by this algorithm, the widget will print a warning message
and give up.  When the menu is found it will be popped up
exclusive and spring_loaded.  The MenuButton widget does not
copy the value of this resource into newly allocated memory. The
application programmer must pass the resource value in
nonvolatile memory.
.Pf
.Pb
.Re
.Sc
.Se
.Ss
.Tr
.Xy
.NH 3
MenuButton Actions
.IN "MenuButton widget" "actions"
.LP
The MenuButton widget supports the following actions:
.IP \(bu 5
Switching the button between the foreground and background
colors with \fBset\fP and \fBunset\fP
.IP \(bu 5
Processing application callbacks with \fBnotify\fP
.IP \(bu 5
Switching the internal border between highlighted
and unhighlighted states with \fBhighlight\fP and \fBunhighlight\fP
.IP \(bu 5
Popping up a menu with \fBPopupMenu\fP
.LP
The following are the default translation bindings used by the
MenuButton widget:
.LP
.sp
.Ds 0
.TA .5i 2.25i
.ta .5i 2.25i
	<EnterWindow>:	highlight(\|)
	<LeaveWindow>:	reset(\|)
	<BtnDown>:	reset(\|) PopupMenu(\)
.De
.NH 3
MenuButton Actions
.LP
The full list of actions supported by MenuButton is:
.IP \fBhighlight\fP(\fIcondition\fP) 1.5i
Displays the internal highlight border in the color (\fBforeground\fP
or \fBbackground\fP ) that contrasts with the interior color of the
Command widget.  The conditions \fBWhenUnset\fP and \fBAlways\fP are
understood by this action procedure.  If no argument is passed,
\fBWhenUnset\fP is assumed.
.IP \fBunhighlight\fP(\|) 1.5i
Displays the internal highlight border in the color (\fBXtNforeground\fP
or \fBbackground\fP ) that matches the interior color of the
MenuButton widget.
.IP \fBset\fP(\|) 1.5i
Enters the \fIset\fP state, in which \fBnotify\fP is possible.  This
action causes the button to display its interior in the
\fBforeground\fP color.  The label or bitmap is displayed in the
\fBbackground\fP color.
.IP \fBunset\fP(\|) 1.5i
Cancels the \fIset\fP state and displays the interior of the button in the
\fBbackground\fP color.  The label or bitmap is displayed in the
\fBforeground\fP color.
.IP \fBreset\fP(\|) 1.5i
Cancels any \fBset\fP or \fBhighlight\fP and displays the interior of the
button in the \fBbackground\fP color, with the label displayed in the
\fBforeground\fP color.
.IP \fBnotify\fP(\|) 1.5i
When the button is in the \fBset\fP state this action calls all functions in
the callback list named by the \fBcallback\fP resource.  The value of
the call_data argument in these callback functions is undefined.
.IP \fBPopupMenu\fP(\|) 1.5i
Pops up the menu specified by the \fBmenuName\fP resource.
.LP
The MenuButton widget does not place a server grab on itself.
Instead, PopupMenu is registered as a grab action.
As a result, clients which popup menus without using XtMenuPopup
or MenuPopup or PopupMenu in translations will fail to have a grab active.
They should make a call to XtRegisterGrabAction on the appropriate action
in the application initialization routine, or use a different translation.
.bp
