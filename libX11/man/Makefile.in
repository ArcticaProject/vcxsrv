# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Have to fake out automake by calling our man pages "DATA" since "MANS" won't
# accept .3x as a valid man page suffix

#							-*- Makefile -*-
# Rules for generating files using the C pre-processor
# (Replaces CppFileTarget from Imake)

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/cpprules.in
subdir = man
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h \
	$(top_builddir)/include/X11/XlibConf.h
CONFIG_CLEAN_FILES =
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libmandir)"
libmanDATA_INSTALL = $(INSTALL_DATA)
DATA = $(libman_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ADMIN_MAN_DIR = @ADMIN_MAN_DIR@
ADMIN_MAN_SUFFIX = @ADMIN_MAN_SUFFIX@
AMTAR = @AMTAR@
APP_MAN_DIR = @APP_MAN_DIR@
APP_MAN_SUFFIX = @APP_MAN_SUFFIX@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BIGFONT_CFLAGS = @BIGFONT_CFLAGS@
BIGFONT_LIBS = @BIGFONT_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DRIVER_MAN_DIR = @DRIVER_MAN_DIR@
DRIVER_MAN_SUFFIX = @DRIVER_MAN_SUFFIX@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FILE_MAN_DIR = @FILE_MAN_DIR@
FILE_MAN_SUFFIX = @FILE_MAN_SUFFIX@
GREP = @GREP@
I18N_MODULE_LIBS = @I18N_MODULE_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KEYSYMDEF = @KEYSYMDEF@
LAUNCHD = @LAUNCHD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIB_MAN_DIR = @LIB_MAN_DIR@
LIB_MAN_SUFFIX = @LIB_MAN_SUFFIX@
LINT = @LINT@
LINTLIB = @LINTLIB@
LINT_FLAGS = @LINT_FLAGS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MALLOC_ZERO_CFLAGS = @MALLOC_ZERO_CFLAGS@
MISC_MAN_DIR = @MISC_MAN_DIR@
MISC_MAN_SUFFIX = @MISC_MAN_SUFFIX@
MKDIR_P = @MKDIR_P@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
RAWCPP = @RAWCPP@
RAWCPPFLAGS = @RAWCPPFLAGS@
SED = sed
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
WCHAR32 = @WCHAR32@
X11_CFLAGS = @X11_CFLAGS@
X11_DATADIR = @X11_DATADIR@
X11_EXTRA_DEPS = @X11_EXTRA_DEPS@
X11_LIBDIR = @X11_LIBDIR@
X11_LIBS = @X11_LIBS@
X11_LOCALEDATADIR = @X11_LOCALEDATADIR@
X11_LOCALEDIR = @X11_LOCALEDIR@
X11_LOCALELIBDIR = @X11_LOCALELIBDIR@
XDMCP_CFLAGS = @XDMCP_CFLAGS@
XDMCP_LIBS = @XDMCP_LIBS@
XERRORDB = @XERRORDB@
XKBPROTO_CFLAGS = @XKBPROTO_CFLAGS@
XKBPROTO_LIBS = @XKBPROTO_LIBS@
XKBPROTO_REQUIRES = @XKBPROTO_REQUIRES@
XKEYSYMDB = @XKEYSYMDB@
XLOCALEDATADIR = @XLOCALEDATADIR@
XLOCALEDIR = @XLOCALEDIR@
XLOCALELIBDIR = @XLOCALELIBDIR@
XMALLOC_ZERO_CFLAGS = @XMALLOC_ZERO_CFLAGS@
XPROTO_CFLAGS = @XPROTO_CFLAGS@
XPROTO_LIBS = @XPROTO_LIBS@
XTHREADLIB = @XTHREADLIB@
XTHREADS = @XTHREADS@
XTHREAD_CFLAGS = @XTHREAD_CFLAGS@
XTMALLOC_ZERO_CFLAGS = @XTMALLOC_ZERO_CFLAGS@
XUSE_MTSAFE_API = @XUSE_MTSAFE_API@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = xkb
libmandir = $(LIB_MAN_DIR)
LIB_MAN_DIR_SUFFIX = $(LIB_MAN_DIR:@mandir@/man%=%)
libman_PRE = \
	AllPlanes.man \
	BlackPixelOfScreen.man \
	DisplayOfCCC.man \
	ImageByteOrder.man \
	IsCursorKey.man \
	XAllocClassHint.man \
	XAllocIconSize.man \
	XAllocStandardColormap.man \
	XAllocSizeHints.man \
	XAllocWMHints.man \
	XAddHost.man \
	XAllocColor.man \
	XAllowEvents.man \
	XAnyEvent.man \
	XButtonEvent.man \
	XChangeKeyboardControl.man \
	XChangeKeyboardMapping.man \
	XClientMessageEvent.man \
	XChangePointerControl.man \
	XChangeSaveSet.man \
	XChangeWindowAttributes.man \
	XCreateWindowEvent.man \
	XCirculateEvent.man \
	XCirculateRequestEvent.man \
	XClearArea.man \
	XColormapEvent.man \
	XConfigureEvent.man \
	XConfigureRequestEvent.man \
	XConfigureWindow.man \
	XCopyArea.man \
	XCreateColormap.man \
	XCreateFontCursor.man \
	XCreateFontSet.man \
	XCreateGC.man \
	XCreateIC.man \
	XInitImage.man \
	XCreateOC.man \
	XCreatePixmap.man \
	XCreateRegion.man \
	XCreateWindow.man \
	XCrossingEvent.man \
	XDestroyWindowEvent.man \
	XDefineCursor.man \
	XDestroyWindow.man \
	XDrawArc.man \
	XDrawImageString.man \
	XDrawLine.man \
	XDrawPoint.man \
	XDrawRectangle.man \
	XDrawString.man \
	XDrawText.man \
	XEmptyRegion.man \
	XrmEnumerateDatabase.man \
	XExtentsOfFontSet.man \
	XErrorEvent.man \
	XExposeEvent.man \
	XFocusChangeEvent.man \
	XFilterEvent.man \
	XFontSetExtents.man \
	XFillRectangle.man \
	XFlush.man \
	XFontsOfFontSet.man \
	XFree.man \
	XGraphicsExposeEvent.man \
	XGravityEvent.man \
	XrmGetFileDatabase.man \
	XrmGetResource.man \
	XGetVisualInfo.man \
	XGetWindowAttributes.man \
	XGetWindowProperty.man \
	XGetXCBConnection.man \
	XGrabButton.man \
	XGrabKey.man \
	XGrabKeyboard.man \
	XGrabPointer.man \
	XGrabServer.man \
	XIconifyWindow.man \
	XIfEvent.man \
	XrmInitialize.man \
	XInstallColormap.man \
	XAddConnectionWatch.man \
	XIntersectRegion.man \
	XInternAtom.man \
	XKeymapEvent.man \
	XListFonts.man \
	XLoadFont.man \
	XLookupKeysym.man \
	XrmMergeDatabases.man \
	XMapEvent.man \
	XMapRequestEvent.man \
	XMapWindow.man \
	XNextEvent.man \
	XNoOp.man \
	XOpenDisplay.man \
	XOpenIM.man \
	XOpenOM.man \
	XPropertyEvent.man \
	XParseGeometry.man \
	XPolygonRegion.man \
	XPutBackEvent.man \
	XPutImage.man \
	XrmPutResource.man \
	XQueryBestSize.man \
	XQueryColor.man \
	XQueryExtension.man \
	XQueryPointer.man \
	XQueryTree.man \
	XReparentEvent.man \
	XResourceManagerString.man \
	XResizeRequestEvent.man \
	XRaiseWindow.man \
	XReadBitmapFile.man \
	XRecolorCursor.man \
	XReparentWindow.man \
	XSelectionClearEvent.man \
	XSaveContext.man \
	XSelectionEvent.man \
	XSetICFocus.man \
	XSetICValues.man \
	XSelectInput.man \
	XStringListToTextProperty.man \
	XSelectionRequestEvent.man \
	XSetArcMode.man \
	XSetClipOrigin.man \
	XSetCloseDownMode.man \
	XSetCommand.man \
	XSetErrorHandler.man \
	XSetEventQueueOwner.man \
	XSendEvent.man \
	XSetFillStyle.man \
	XSetFont.man \
	XSetFontPath.man \
	XSetInputFocus.man \
	XSetLineAttributes.man \
	XSetPointerMapping.man \
	XSetScreenSaver.man \
	XSetSelectionOwner.man \
	XSetState.man \
	XSetTransientForHint.man \
	XSetTextProperty.man \
	XSetTile.man \
	XSetWMClientMachine.man \
	XSetWMColormapWindows.man \
	XSetWMIconName.man \
	XSetWMName.man \
	XSetWMProperties.man \
	XSetWMProtocols.man \
	XStoreBytes.man \
	XStoreColors.man \
	XStringToKeysym.man \
	XSupportsLocale.man \
	XSynchronize.man \
	XmbTextListToTextProperty.man \
	XTextExtents.man \
	XTextWidth.man \
	XInitThreads.man \
	XTranslateCoordinates.man \
	XrmUniqueQuark.man \
	XUnmapEvent.man \
	XUnmapWindow.man \
	XVaCreateNestedList.man \
	XVisibilityEvent.man \
	XWarpPointer.man \
	XcmsCCCOfColormap.man \
	XcmsAllocColor.man \
	XcmsConvertColors.man \
	XcmsColor.man \
	XcmsCreateCCC.man \
	XcmsDefaultCCC.man \
	XcmsCIELabQueryMaxC.man \
	XcmsCIELuvQueryMaxC.man \
	XcmsQueryBlack.man \
	XcmsQueryColor.man \
	XcmsStoreColor.man \
	XcmsSetWhitePoint.man \
	XcmsTekHVCQueryMaxC.man \
	XmbDrawImageString.man \
	XmbDrawString.man \
	XmbDrawText.man \
	XmbLookupString.man \
	XmbResetIC.man \
	XmbTextEscapement.man \
	XmbTextExtents.man \
	XmbTextPerCharExtents.man


# What we actually install 
@MANPAGES_TRUE@libman_DATA = $(libman_PRE:man=@LIB_MAN_SUFFIX@) \
@MANPAGES_TRUE@	      $(all_shadows:=.@LIB_MAN_SUFFIX@)

@MANPAGES_TRUE@BUILT_SOURCES = shadows.DONE
EXTRA_DIST = $(libman_PRE)
CLEANFILES = $(libman_DATA)
SUFFIXES = .pre .$(LIB_MAN_SUFFIX) .man
WCHAR32_FLAGS = -DWCHAR32=@WCHAR32@
CPP_FILES_FLAGS = $(WCHAR32_FLAGS)

# Translate XCOMM into pound sign with sed, rather than passing -DXCOMM=XCOMM
# to cpp, because that trick does not work on all ANSI C preprocessors.
# Delete line numbers from the cpp output (-P is not portable, I guess).
# Allow XCOMM to be preceded by whitespace and provide a means of generating
# output lines with trailing backslashes.
# Allow XHASH to always be substituted, even in cases where XCOMM isn't.
CPP_SED_MAGIC = $(SED) -e '/^\#  *[0-9][0-9]*  *.*$$/d' \
                       -e '/^\#line  *[0-9][0-9]*  *.*$$/d' \
                       -e '/^[         ]*XCOMM$$/s/XCOMM/\#/' \
                       -e '/^[         ]*XCOMM[^a-zA-Z0-9_]/s/XCOMM/\#/' \
                       -e '/^[         ]*XHASH/s/XHASH/\#/' \
                       -e '/\@\@$$/s/\@\@$$/\\/'

XORGRELSTRING = @PACKAGE_STRING@
XORGMANNAME = X Version 11
MANDEFS = -D__libmansuffix__=$(LIB_MAN_SUFFIX) \
	-D__xorgversion__="\"$(XORGRELSTRING)\" \"$(XORGMANNAME)\""

CPP_MAN_FLAGS = $(MANDEFS) $(EXTRAMANDEFS)

# Generate man page shadow files (Replaces InstallManPageAliases from Imake)
all_shadows = \
    $(AllPlanes_shadows)                     \
    $(BlackPixelOfScreen_shadows)            \
    $(DisplayOfCCC_shadows)                  \
    $(ImageByteOrder_shadows)                \
    $(IsCursorKey_shadows)                   \
    $(XAllocClassHint_shadows)               \
    $(XAllocIconSize_shadows)                \
    $(XAllocStandardColormap_shadows)        \
    $(XAllocSizeHints_shadows)               \
    $(XAllocWMHints_shadows)                 \
    $(XAddHost_shadows)                      \
    $(XAllocColor_shadows)                   \
    $(XAnyEvent_shadows)                     \
    $(XButtonEvent_shadows)                  \
    $(XChangeKeyboardControl_shadows)        \
    $(XChangeKeyboardMapping_shadows)        \
    $(XChangePointerControl_shadows)         \
    $(XChangeSaveSet_shadows)                \
    $(XChangeWindowAttributes_shadows)       \
    $(XClearArea_shadows)                    \
    $(XConfigureWindow_shadows)              \
    $(XCopyArea_shadows)                     \
    $(XCreateColormap_shadows)               \
    $(XCreateFontCursor_shadows)             \
    $(XCreateFontSet_shadows)                \
    $(XCreateGC_shadows)                     \
    $(XCreateIC_shadows)                     \
    $(XInitImage_shadows)                    \
    $(XCreateOC_shadows)                     \
    $(XCreatePixmap_shadows)                 \
    $(XCreateRegion_shadows)                 \
    $(XCreateWindow_shadows)                 \
    $(XDefineCursor_shadows)                 \
    $(XDestroyWindow_shadows)                \
    $(XDrawArc_shadows)                      \
    $(XDrawImageString_shadows)              \
    $(XDrawLine_shadows)                     \
    $(XDrawPoint_shadows)                    \
    $(XDrawRectangle_shadows)                \
    $(XDrawString_shadows)                   \
    $(XDrawText_shadows)                     \
    $(XEmptyRegion_shadows)                  \
    $(XFillRectangle_shadows)                \
    $(XFlush_shadows)                        \
    $(XFontsOfFontSet_shadows)               \
    $(XGraphicsExposeEvent_shadows)          \
    $(XrmGetFileDatabase_shadows)            \
    $(XrmGetResource_shadows)                \
    $(XGetVisualInfo_shadows)                \
    $(XGetWindowAttributes_shadows)          \
    $(XGetWindowProperty_shadows)            \
    $(XGrabButton_shadows)                   \
    $(XGrabKey_shadows)                      \
    $(XGrabKeyboard_shadows)                 \
    $(XGrabPointer_shadows)                  \
    $(XGrabServer_shadows)                   \
    $(XIconifyWindow_shadows)                \
    $(XIfEvent_shadows)                      \
    $(XrmInitialize_shadows)                 \
    $(XInstallColormap_shadows)              \
    $(XAddConnectionWatch_shadows)           \
    $(XIntersectRegion_shadows)              \
    $(XInternAtom_shadows)                   \
    $(XListFonts_shadows)                    \
    $(XLoadFont_shadows)                     \
    $(XLookupKeysym_shadows)                 \
    $(XrmMergeDatabases_shadows)             \
    $(XMapEvent_shadows)                     \
    $(XMapWindow_shadows)                    \
    $(XNextEvent_shadows)                    \
    $(XOpenDisplay_shadows)                  \
    $(XOpenIM_shadows)                       \
    $(XOpenOM_shadows)                       \
    $(XParseGeometry_shadows)                \
    $(XPolygonRegion_shadows)                \
    $(XPutImage_shadows)                     \
    $(XrmPutResource_shadows)                \
    $(XQueryBestSize_shadows)                \
    $(XQueryColor_shadows)                   \
    $(XQueryExtension_shadows)               \
    $(XResourceManagerString_shadows)        \
    $(XRaiseWindow_shadows)                  \
    $(XReadBitmapFile_shadows)               \
    $(XRecolorCursor_shadows)                \
    $(XSaveContext_shadows)                  \
    $(XSetICFocus_shadows)                   \
    $(XSetICValues_shadows)                  \
    $(XStringListToTextProperty_shadows)     \
    $(XSetArcMode_shadows)                   \
    $(XSetClipOrigin_shadows)                \
    $(XSetCloseDownMode_shadows)             \
    $(XSetCommand_shadows)                   \
    $(XSetErrorHandler_shadows)              \
    $(XSendEvent_shadows)                    \
    $(XSetFillStyle_shadows)                 \
    $(XSetFontPath_shadows)                  \
    $(XSetInputFocus_shadows)                \
    $(XSetLineAttributes_shadows)            \
    $(XSetPointerMapping_shadows)            \
    $(XSetScreenSaver_shadows)               \
    $(XSetSelectionOwner_shadows)            \
    $(XSetState_shadows)                     \
    $(XSetTransientForHint_shadows)          \
    $(XSetTextProperty_shadows)              \
    $(XSetTile_shadows)                      \
    $(XSetWMClientMachine_shadows)           \
    $(XSetWMColormapWindows_shadows)         \
    $(XSetWMIconName_shadows)                \
    $(XSetWMName_shadows)                    \
    $(XSetWMProperties_shadows)              \
    $(XSetWMProtocols_shadows)               \
    $(XStoreBytes_shadows)                   \
    $(XStoreColors_shadows)                  \
    $(XStringToKeysym_shadows)               \
    $(XSupportsLocale_shadows)               \
    $(XSynchronize_shadows)                  \
    $(XmbTextListToTextProperty_shadows)     \
    $(XTextExtents_shadows)                  \
    $(XTextWidth_shadows)                    \
    $(XInitThreads_shadows)                  \
    $(XrmUniqueQuark_shadows)                \
    $(XUnmapWindow_shadows)                  \
    $(XcmsCCCOfColormap_shadows)             \
    $(XcmsAllocColor_shadows)                \
    $(XcmsColor_shadows)                     \
    $(XcmsCreateCCC_shadows)                 \
    $(XcmsCIELabQueryMaxC_shadows)           \
    $(XcmsCIELuvQueryMaxC_shadows)           \
    $(XcmsQueryBlack_shadows)                \
    $(XcmsQueryColor_shadows)                \
    $(XcmsStoreColor_shadows)                \
    $(XcmsSetWhitePoint_shadows)             \
    $(XcmsTekHVCQueryMaxC_shadows)           \
    $(XmbDrawImageString_shadows)            \
    $(XmbDrawString_shadows)                 \
    $(XmbDrawText_shadows)                   \
    $(XmbLookupString_shadows)               \
    $(XmbResetIC_shadows)                    \
    $(XmbTextEscapement_shadows)             \
    $(XmbTextExtents_shadows)                \
    $(XmbTextPerCharExtents_shadows)

AllPlanes_shadows = \
    BlackPixel                              \
    WhitePixel                              \
    ConnectionNumber                        \
    DefaultColormap                         \
    DefaultDepth                            \
    XListDepths                             \
    DefaultGC                               \
    DefaultRootWindow                       \
    DefaultScreenOfDisplay                  \
    DefaultScreen                           \
    DefaultVisual                           \
    DisplayCells                            \
    DisplayPlanes                           \
    DisplayString                           \
    XMaxRequestSize                         \
    XExtendedMaxRequestSize                 \
    LastKnownRequestProcessed               \
    NextRequest                             \
    ProtocolVersion                         \
    ProtocolRevision                        \
    QLength                                 \
    RootWindow                              \
    ScreenCount                             \
    ScreenOfDisplay                         \
    ServerVendor                            \
    VendorRelease

BlackPixelOfScreen_shadows = \
    WhitePixelOfScreen                      \
    CellsOfScreen                           \
    DefaultColormapOfScreen                 \
    DefaultDepthOfScreen                    \
    DefaultGCOfScreen                       \
    DefaultVisualOfScreen                   \
    DoesBackingStore                        \
    DoesSaveUnders                          \
    DisplayOfScreen                         \
    XScreenNumberOfScreen                   \
    EventMaskOfScreen                       \
    HeightOfScreen                          \
    HeightMMOfScreen                        \
    MaxCmapsOfScreen                        \
    MinCmapsOfScreen                        \
    PlanesOfScreen                          \
    RootWindowOfScreen                      \
    WidthOfScreen                           \
    WidthMMOfScreen

DisplayOfCCC_shadows = \
    VisualOfCCC                             \
    ScreenNumberOfCCC                       \
    ScreenWhitePointOfCCC                   \
    ClientWhitePointOfCCC

ImageByteOrder_shadows = \
    BitmapBitOrder                          \
    BitmapPad                               \
    BitmapUnit                              \
    DisplayHeight                           \
    DisplayHeightMM                         \
    DisplayWidth                            \
    DisplayWidthMM                          \
    XListPixmapFormats                      \
    XPixmapFormatValues

IsCursorKey_shadows = \
    IsFunctionKey                           \
    IsKeypadKey                             \
    IsMiscFunctionKey                       \
    IsModifierKey                           \
    IsPFKey                                 \
    IsPrivateKeypadKey

XAllocClassHint_shadows = \
    XSetClassHint                           \
    XGetClassHint                           \
    XClassHint

XAllocIconSize_shadows = \
    XSetIconSizes                           \
    XGetIconSizes                           \
    XIconSize

XAllocStandardColormap_shadows = \
    XSetRGBColormaps                        \
    XGetRGBColormaps                        \
    XStandardColormap

XAllocSizeHints_shadows = \
    XSetWMNormalHints                       \
    XGetWMNormalHints                       \
    XSetWMSizeHints                         \
    XGetWMSizeHints                         \
    XSizeHints

XAllocWMHints_shadows = \
    XSetWMHints                             \
    XGetWMHints                             \
    XWMHints

XAddHost_shadows = \
    XAddHosts                               \
    XListHosts                              \
    XRemoveHost                             \
    XRemoveHosts                            \
    XSetAccessControl                       \
    XEnableAccessControl                    \
    XDisableAccessControl                   \
    XHostAddress

XAllocColor_shadows = \
    XAllocNamedColor                        \
    XAllocColorCells                        \
    XAllocColorPlanes                       \
    XFreeColors

XAnyEvent_shadows = \
    XEvent

XButtonEvent_shadows = \
    XKeyEvent                               \
    XMotionEvent

XChangeKeyboardControl_shadows = \
    XGetKeyboardControl                     \
    XAutoRepeatOn                           \
    XAutoRepeatOff                          \
    XBell                                   \
    XQueryKeymap                            \
    XKeyboardControl

XChangeKeyboardMapping_shadows = \
    XGetKeyboardMapping                     \
    XDisplayKeycodes                        \
    XSetModifierMapping                     \
    XGetModifierMapping                     \
    XNewModifiermap                         \
    XInsertModifiermapEntry                 \
    XDeleteModifiermapEntry                 \
    XFreeModifierMap                        \
    XModifierKeymap

XChangePointerControl_shadows = \
    XGetPointerControl

XChangeSaveSet_shadows = \
    XAddToSaveSet                           \
    XRemoveFromSaveSet

XChangeWindowAttributes_shadows = \
    XSetWindowBackground                    \
    XSetWindowBackgroundPixmap              \
    XSetWindowBorder                        \
    XSetWindowBorderPixmap                  \
    XSetWindowColormap

XClearArea_shadows = \
    XClearWindow

XConfigureWindow_shadows = \
    XMoveWindow                             \
    XResizeWindow                           \
    XMoveResizeWindow                       \
    XSetWindowBorderWidth                   \
    XWindowChanges

XCopyArea_shadows = \
    XCopyPlane

XCreateColormap_shadows = \
    XCopyColormapAndFree                    \
    XFreeColormap                           \
    XColor

XCreateFontCursor_shadows = \
    XCreatePixmapCursor                     \
    XCreateGlyphCursor

XCreateFontSet_shadows = \
    XFreeFontSet

XCreateGC_shadows = \
    XCopyGC                                 \
    XChangeGC                               \
    XGetGCValues                            \
    XFreeGC                                 \
    XGContextFromGC                         \
    XGCValues

XCreateIC_shadows = \
    XDestroyIC                              \
    XIMOfIC

XInitImage_shadows = \
    XCreateImage                            \
    XGetPixel                               \
    XPutPixel                               \
    XSubImage                               \
    XAddPixel                               \
    XDestroyImage

XCreateOC_shadows = \
    XDestroyOC                              \
    XSetOCValues                            \
    XGetOCValues                            \
    XOMOfOC

XCreatePixmap_shadows = \
    XFreePixmap

XCreateRegion_shadows = \
    XSetRegion                              \
    XDestroyRegion

XCreateWindow_shadows = \
    XCreateSimpleWindow                     \
    XSetWindowAttributes

XDefineCursor_shadows = \
    XUndefineCursor

XDestroyWindow_shadows = \
    XDestroySubwindows

XDrawArc_shadows = \
    XDrawArcs                               \
    XArc

XDrawImageString_shadows = \
    XDrawImageString16

XDrawLine_shadows = \
    XDrawLines                              \
    XDrawSegments                           \
    XSegment

XDrawPoint_shadows = \
    XDrawPoints                             \
    XPoint

XDrawRectangle_shadows = \
    XDrawRectangles                         \
    XRectangle

XDrawString_shadows = \
    XDrawString16

XDrawText_shadows = \
    XDrawText16                             \
    XTextItem                               \
    XTextItem16

XEmptyRegion_shadows = \
    XEqualRegion                            \
    XPointInRegion                          \
    XRectInRegion

XFillRectangle_shadows = \
    XFillRectangles                         \
    XFillPolygon                            \
    XFillArc                                \
    XFillArcs

XFlush_shadows = \
    XSync                                   \
    XEventsQueued                           \
    XPending

XFontsOfFontSet_shadows = \
    XBaseFontNameListOfFontSet              \
    XLocaleOfFontSet                        \
    XContextDependentDrawing                \
    XContextualDrawing                      \
    XDirectionalDependentDrawing

XGraphicsExposeEvent_shadows = \
    XNoExposeEvent

XrmGetFileDatabase_shadows = \
    XrmPutFileDatabase                      \
    XrmGetStringDatabase                    \
    XrmLocaleOfDatabase                     \
    XrmGetDatabase                          \
    XrmSetDatabase                          \
    XrmDestroyDatabase

XrmGetResource_shadows = \
    XrmQGetResource                         \
    XrmQGetSearchList                       \
    XrmQGetSearchResource

XGetVisualInfo_shadows = \
    XMatchVisualInfo                        \
    XVisualIDFromVisual                     \
    XVisualInfo

XGetWindowAttributes_shadows = \
    XGetGeometry                            \
    XWindowAttributes

XGetWindowProperty_shadows = \
    XListProperties                         \
    XChangeProperty                         \
    XRotateWindowProperties                 \
    XDeleteProperty

XGrabButton_shadows = \
    XUngrabButton

XGrabKey_shadows = \
    XUngrabKey

XGrabKeyboard_shadows = \
    XUngrabKeyboard

XGrabPointer_shadows = \
    XUngrabPointer                          \
    XChangeActivePointerGrab

XGrabServer_shadows = \
    XUngrabServer

XIconifyWindow_shadows = \
    XWithdrawWindow                         \
    XReconfigureWMWindow

XIfEvent_shadows = \
    XCheckIfEvent                           \
    XPeekIfEvent

XrmInitialize_shadows = \
    XrmParseCommand                         \
    XrmValue                                \
    XrmOptionKind                           \
    XrmOptionDescRec

XInstallColormap_shadows = \
    XUninstallColormap                      \
    XListInstalledColormaps

XAddConnectionWatch_shadows = \
    XRemoveConnectionWatch                  \
    XProcessInternalConnection              \
    XInternalConnectionNumbers

XIntersectRegion_shadows = \
    XUnionRegion                            \
    XUnionRectWithRegion                    \
    XSubtractRegion                         \
    XXorRegion                              \
    XOffsetRegion                           \
    XShrinkRegion

XInternAtom_shadows = \
    XInternAtoms                            \
    XGetAtomName                            \
    XGetAtomNames

XListFonts_shadows = \
    XFreeFontNames                          \
    XListFontsWithInfo                      \
    XFreeFontInfo

XLoadFont_shadows = \
    XQueryFont                              \
    XLoadQueryFont                          \
    XFreeFont                               \
    XGetFontProperty                        \
    XUnloadFont                             \
    XCharStruct                             \
    XFontProp                               \
    XChar2b                                 \
    XFontStruct

XLookupKeysym_shadows = \
    XRefreshKeyboardMapping                 \
    XLookupString                           \
    XRebindKeysym

XrmMergeDatabases_shadows = \
    XrmCombineDatabase                      \
    XrmCombineFileDatabase

XMapEvent_shadows = \
    XMappingEvent

XMapWindow_shadows = \
    XMapRaised                              \
    XMapSubwindows

XNextEvent_shadows = \
    XPeekEvent                              \
    XWindowEvent                            \
    XCheckWindowEvent                       \
    XMaskEvent                              \
    XCheckMaskEvent                         \
    XCheckTypedEvent                        \
    XCheckTypedWindowEvent

XOpenDisplay_shadows = \
    XCloseDisplay

XOpenIM_shadows = \
    XCloseIM                                \
    XSetIMValues                            \
    XGetIMValues                            \
    XDisplayOfIM                            \
    XLocaleOfIM                             \
    XRegisterIMInstantiateCallback          \
    XUnregisterIMInstantiateCallback

XOpenOM_shadows = \
    XCloseOM                                \
    XSetOMValues                            \
    XGetOMValues                            \
    XDisplayOfOM                            \
    XLocaleOfOM

XParseGeometry_shadows = \
    XWMGeometry

XPolygonRegion_shadows = \
    XClipBox

XPutImage_shadows = \
    XGetImage                               \
    XGetSubImage

XrmPutResource_shadows = \
    XrmQPutResource                         \
    XrmPutStringResource                    \
    XrmQPutStringResource                   \
    XrmPutLineResource

XQueryBestSize_shadows = \
    XQueryBestTile                          \
    XQueryBestStipple

XQueryColor_shadows = \
    XQueryColors                            \
    XLookupColor                            \
    XParseColor

XQueryExtension_shadows = \
    XListExtensions                         \
    XFreeExtensionList

XResourceManagerString_shadows = \
    XScreenResourceString

XRaiseWindow_shadows = \
    XLowerWindow                            \
    XCirculateSubwindows                    \
    XCirculateSubwindowsUp                  \
    XCirculateSubwindowsDown                \
    XRestackWindows

XReadBitmapFile_shadows = \
    XReadBitmapFileData                     \
    XWriteBitmapFile                        \
    XCreatePixmapFromBitmapData             \
    XCreateBitmapFromData

XRecolorCursor_shadows = \
    XFreeCursor                             \
    XQueryBestCursor

XSaveContext_shadows = \
    XFindContext                            \
    XDeleteContext                          \
    XUniqueContext

XSetICFocus_shadows = \
    XUnsetICFocus

XSetICValues_shadows = \
    XGetICValues

XStringListToTextProperty_shadows = \
    XTextPropertyToStringList               \
    XFreeStringList                         \
    XTextProperty

XSetArcMode_shadows = \
    XSetSubwindowMode                       \
    XSetGraphicsExposure

XSetClipOrigin_shadows = \
    XSetClipMask                            \
    XSetClipRectangles

XSetCloseDownMode_shadows = \
    XKillClient

XSetCommand_shadows = \
    XGetCommand

XSetErrorHandler_shadows = \
    XGetErrorText                           \
    XDisplayName                            \
    XSetIOErrorHandler                      \
    XGetErrorDatabaseText

XSendEvent_shadows = \
    XDisplayMotionBufferSize                \
    XGetMotionEvents                        \
    XTimeCoord

XSetFillStyle_shadows = \
    XSetFillRule

XSetFontPath_shadows = \
    XGetFontPath                            \
    XFreeFontPath

XSetInputFocus_shadows = \
    XGetInputFocus

XSetLineAttributes_shadows = \
    XSetDashes

XSetPointerMapping_shadows = \
    XGetPointerMapping

XSetScreenSaver_shadows = \
    XForceScreenSaver                       \
    XActivateScreenSaver                    \
    XResetScreenSaver                       \
    XGetScreenSaver

XSetSelectionOwner_shadows = \
    XGetSelectionOwner                      \
    XConvertSelection

XSetState_shadows = \
    XSetFunction                            \
    XSetPlaneMask                           \
    XSetForeground                          \
    XSetBackground

XSetTransientForHint_shadows = \
    XGetTransientForHint

XSetTextProperty_shadows = \
    XGetTextProperty

XSetTile_shadows = \
    XSetStipple                             \
    XSetTSOrigin

XSetWMClientMachine_shadows = \
    XGetWMClientMachine

XSetWMColormapWindows_shadows = \
    XGetWMColormapWindows

XSetWMIconName_shadows = \
    XGetWMIconName                          \
    XSetIconName                            \
    XGetIconName

XSetWMName_shadows = \
    XGetWMName                              \
    XStoreName                              \
    XFetchName

XSetWMProperties_shadows = \
    XmbSetWMProperties                      \
    Xutf8SetWMProperties

XSetWMProtocols_shadows = \
    XGetWMProtocols

XStoreBytes_shadows = \
    XStoreBuffer                            \
    XFetchBytes                             \
    XFetchBuffer                            \
    XRotateBuffers

XStoreColors_shadows = \
    XStoreColor                             \
    XStoreNamedColor

XStringToKeysym_shadows = \
    XKeysymToString                         \
    XKeycodeToKeysym                        \
    XKeysymToKeycode                        \
    XConvertCase

XSupportsLocale_shadows = \
    XSetLocaleModifiers

XSynchronize_shadows = \
    XSetAfterFunction

XmbTextListToTextProperty_shadows = \
    XwcTextListToTextProperty               \
    Xutf8TextListToTextProperty             \
    XmbTextPropertyToTextList               \
    XwcTextPropertyToTextList               \
    Xutf8TextPropertyToTextList             \
    XwcFreeStringList                       \
    XDefaultString

XTextExtents_shadows = \
    XTextExtents16                          \
    XQueryTextExtents                       \
    XQueryTextExtents16

XTextWidth_shadows = \
    XTextWidth16

XInitThreads_shadows = \
    XLockDisplay                            \
    XUnlockDisplay

XrmUniqueQuark_shadows = \
    XrmStringToQuark                        \
    XrmPermStringToQuark                    \
    XrmQuarkToString                        \
    XrmStringToQuarkList                    \
    XrmStringToBindingQuarkList

XUnmapWindow_shadows = \
    XUnmapSubwindows

XcmsCCCOfColormap_shadows = \
    XcmsSetCCCOfColormap

XcmsAllocColor_shadows = \
    XcmsAllocNamedColor

XcmsColor_shadows = \
    XcmsRGB                                 \
    XcmsRGBi                                \
    XcmsCIEXYZ                              \
    XcmsCIEuvY                              \
    XcmsCIExyY                              \
    XcmsCIELab                              \
    XcmsCIELuv                              \
    XcmsTekHVC                              \
    XcmsPad

XcmsCreateCCC_shadows = \
    XcmsFreeCCC

XcmsCIELabQueryMaxC_shadows = \
    XcmsCIELabQueryMaxL                     \
    XcmsCIELabQueryMaxLC                    \
    XcmsCIELabQueryMinL

XcmsCIELuvQueryMaxC_shadows = \
    XcmsCIELuvQueryMaxL                     \
    XcmsCIELuvQueryMaxLC                    \
    XcmsCIELuvQueryMinL

XcmsQueryBlack_shadows = \
    XcmsQueryBlue                           \
    XcmsQueryGreen                          \
    XcmsQueryRed                            \
    XcmsQueryWhite

XcmsQueryColor_shadows = \
    XcmsQueryColors                         \
    XcmsLookupColor

XcmsStoreColor_shadows = \
    XcmsStoreColors

XcmsSetWhitePoint_shadows = \
    XcmsSetWhiteAdjustProc

XcmsTekHVCQueryMaxC_shadows = \
    XcmsTekHVCQueryMaxV                     \
    XcmsTekHVCQueryMaxVC                    \
    XcmsTekHVCQueryMaxVSamples              \
    XcmsTekHVCQueryMinV

XmbDrawImageString_shadows = \
    XwcDrawImageString                      \
    Xutf8DrawImageString

XmbDrawString_shadows = \
    XwcDrawString                           \
    Xutf8DrawString

XmbDrawText_shadows = \
    XwcDrawText                             \
    Xutf8DrawText

XmbLookupString_shadows = \
    XwcLookupString                         \
    Xutf8LookupString

XmbResetIC_shadows = \
    XwcResetIC                              \
    Xutf8ResetIC

XmbTextEscapement_shadows = \
    XwcTextEscapement                       \
    Xutf8TextEscapement

XmbTextExtents_shadows = \
    XwcTextExtents                          \
    Xutf8TextExtents

XmbTextPerCharExtents_shadows = \
    XwcTextPerCharExtents                   \
    Xutf8TextPerCharExtents

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .pre .$(LIB_MAN_SUFFIX) .man
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/cpprules.in $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  man/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  man/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libmanDATA: $(libman_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(libmandir)" || $(MKDIR_P) "$(DESTDIR)$(libmandir)"
	@list='$(libman_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libmanDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(libmandir)/$$f'"; \
	  $(libmanDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(libmandir)/$$f"; \
	done

uninstall-libmanDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(libman_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libmandir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libmandir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libmandir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-libmanDATA

install-dvi: install-dvi-recursive

install-exec-am:

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-libmanDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic clean-libtool \
	ctags ctags-recursive distclean distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libmanDATA install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-libmanDATA


# Allow people to comment out lines by starting them with '##'
.pre:
	$(SED) -e '/^\#\#/d' $< | $(RAWCPP) $(RAWCPPFLAGS) $(CPP_FILES_FLAGS) | $(CPP_SED_MAGIC) > $@

.man.$(LIB_MAN_SUFFIX):
	$(RAWCPP) $(RAWCPPFLAGS) $(CPP_MAN_FLAGS) < $< | $(CPP_SED_MAGIC) > $@

shadows.DONE:
	-rm -f $(all_aliases:=.@LIB_MAN_SUFFIX@)
	(for i in $(AllPlanes_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/AllPlanes.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(BlackPixelOfScreen_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/BlackPixelOfScreen.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(DisplayOfCCC_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/DisplayOfCCC.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(ImageByteOrder_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/ImageByteOrder.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(IsCursorKey_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/IsCursorKey.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XAllocClassHint_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XAllocClassHint.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XAllocIconSize_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XAllocIconSize.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XAllocStandardColormap_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XAllocStandardColormap.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XAllocSizeHints_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XAllocSizeHints.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XAllocWMHints_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XAllocWMHints.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XAddHost_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XAddHost.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XAllocColor_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XAllocColor.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XAnyEvent_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XAnyEvent.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XButtonEvent_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XButtonEvent.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XChangeKeyboardControl_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XChangeKeyboardControl.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XChangeKeyboardMapping_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XChangeKeyboardMapping.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XChangePointerControl_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XChangePointerControl.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XChangeSaveSet_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XChangeSaveSet.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XChangeWindowAttributes_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XChangeWindowAttributes.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XClearArea_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XClearArea.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XConfigureWindow_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XConfigureWindow.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XCopyArea_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XCopyArea.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XCreateColormap_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XCreateColormap.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XCreateFontCursor_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XCreateFontCursor.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XCreateFontSet_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XCreateFontSet.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XCreateGC_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XCreateGC.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XCreateIC_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XCreateIC.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XInitImage_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XInitImage.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XCreateOC_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XCreateOC.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XCreatePixmap_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XCreatePixmap.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XCreateRegion_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XCreateRegion.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XCreateWindow_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XCreateWindow.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XDefineCursor_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XDefineCursor.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XDestroyWindow_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XDestroyWindow.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XDrawArc_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XDrawArc.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XDrawImageString_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XDrawImageString.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XDrawLine_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XDrawLine.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XDrawPoint_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XDrawPoint.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XDrawRectangle_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XDrawRectangle.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XDrawString_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XDrawString.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XDrawText_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XDrawText.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XEmptyRegion_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XEmptyRegion.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XFillRectangle_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XFillRectangle.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XFlush_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XFlush.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XFontsOfFontSet_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XFontsOfFontSet.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XGraphicsExposeEvent_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XGraphicsExposeEvent.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XrmGetFileDatabase_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XrmGetFileDatabase.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XrmGetResource_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XrmGetResource.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XGetVisualInfo_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XGetVisualInfo.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XGetWindowAttributes_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XGetWindowAttributes.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XGetWindowProperty_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XGetWindowProperty.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XGrabButton_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XGrabButton.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XGrabKey_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XGrabKey.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XGrabKeyboard_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XGrabKeyboard.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XGrabPointer_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XGrabPointer.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XGrabServer_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XGrabServer.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XIconifyWindow_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XIconifyWindow.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XIfEvent_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XIfEvent.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XrmInitialize_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XrmInitialize.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XInstallColormap_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XInstallColormap.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XAddConnectionWatch_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XAddConnectionWatch.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XIntersectRegion_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XIntersectRegion.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XInternAtom_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XInternAtom.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XListFonts_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XListFonts.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XLoadFont_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XLoadFont.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XLookupKeysym_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XLookupKeysym.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XrmMergeDatabases_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XrmMergeDatabases.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XMapEvent_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XMapEvent.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XMapWindow_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XMapWindow.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XNextEvent_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XNextEvent.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XOpenDisplay_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XOpenDisplay.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XOpenIM_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XOpenIM.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XOpenOM_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XOpenOM.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XParseGeometry_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XParseGeometry.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XPolygonRegion_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XPolygonRegion.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XPutImage_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XPutImage.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XrmPutResource_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XrmPutResource.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XQueryBestSize_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XQueryBestSize.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XQueryColor_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XQueryColor.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XQueryExtension_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XQueryExtension.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XResourceManagerString_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XResourceManagerString.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XRaiseWindow_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XRaiseWindow.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XReadBitmapFile_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XReadBitmapFile.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XRecolorCursor_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XRecolorCursor.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSaveContext_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSaveContext.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetICFocus_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetICFocus.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetICValues_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetICValues.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XStringListToTextProperty_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XStringListToTextProperty.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetArcMode_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetArcMode.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetClipOrigin_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetClipOrigin.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetCloseDownMode_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetCloseDownMode.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetCommand_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetCommand.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetErrorHandler_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetErrorHandler.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSendEvent_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSendEvent.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetFillStyle_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetFillStyle.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetFontPath_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetFontPath.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetInputFocus_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetInputFocus.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetLineAttributes_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetLineAttributes.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetPointerMapping_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetPointerMapping.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetScreenSaver_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetScreenSaver.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetSelectionOwner_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetSelectionOwner.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetState_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetState.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetTransientForHint_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetTransientForHint.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetTextProperty_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetTextProperty.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetTile_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetTile.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetWMClientMachine_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetWMClientMachine.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetWMColormapWindows_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetWMColormapWindows.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetWMIconName_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetWMIconName.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetWMName_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetWMName.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetWMProperties_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetWMProperties.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSetWMProtocols_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSetWMProtocols.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XStoreBytes_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XStoreBytes.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XStoreColors_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XStoreColors.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XStringToKeysym_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XStringToKeysym.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSupportsLocale_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSupportsLocale.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XSynchronize_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XSynchronize.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XmbTextListToTextProperty_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XmbTextListToTextProperty.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XTextExtents_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XTextExtents.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XTextWidth_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XTextWidth.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XInitThreads_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XInitThreads.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XrmUniqueQuark_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XrmUniqueQuark.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XUnmapWindow_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XUnmapWindow.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XcmsCCCOfColormap_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XcmsCCCOfColormap.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XcmsAllocColor_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XcmsAllocColor.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XcmsColor_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XcmsColor.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XcmsCreateCCC_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XcmsCreateCCC.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XcmsCIELabQueryMaxC_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XcmsCIELabQueryMaxC.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XcmsCIELuvQueryMaxC_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XcmsCIELuvQueryMaxC.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XcmsQueryBlack_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XcmsQueryBlack.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XcmsQueryColor_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XcmsQueryColor.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XcmsStoreColor_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XcmsStoreColor.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XcmsSetWhitePoint_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XcmsSetWhitePoint.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XcmsTekHVCQueryMaxC_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XcmsTekHVCQueryMaxC.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XmbDrawImageString_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XmbDrawImageString.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XmbDrawString_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XmbDrawString.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XmbDrawText_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XmbDrawText.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XmbLookupString_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XmbLookupString.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XmbResetIC_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XmbResetIC.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XmbTextEscapement_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XmbTextEscapement.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XmbTextExtents_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XmbTextExtents.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
	(for i in $(XmbTextPerCharExtents_shadows:=.@LIB_MAN_SUFFIX@) ; do \
	 echo .so man$(LIB_MAN_DIR_SUFFIX)/XmbTextPerCharExtents.$(LIB_MAN_SUFFIX) > $$i; \
	 done)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
