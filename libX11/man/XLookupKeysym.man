.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1994, 1996 X Consortium
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining
.\" a copy of this software and associated documentation files (the
.\" "Software"), to deal in the Software without restriction, including
.\" without limitation the rights to use, copy, modify, merge, publish,
.\" distribute, sublicense, and/or sell copies of the Software, and to
.\" permit persons to whom the Software is furnished to do so, subject to
.\" the following conditions:
.\"
.\" The above copyright notice and this permission notice shall be included
.\" in all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
.\" IN NO EVENT SHALL THE X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR
.\" OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
.\" ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
.\" OTHER DEALINGS IN THE SOFTWARE.
.\"
.\" Except as contained in this notice, the name of the X Consortium shall
.\" not be used in advertising or otherwise to promote the sale, use or
.\" other dealings in this Software without prior written authorization
.\" from the X Consortium.
.\"
.\" Copyright \(co 1985, 1986, 1987, 1988, 1989, 1990, 1991 by
.\" Digital Equipment Corporation
.\"
.\" Portions Copyright \(co 1990, 1991 by
.\" Tektronix, Inc.
.\"
.\" Permission to use, copy, modify and distribute this documentation for
.\" any purpose and without fee is hereby granted, provided that the above
.\" copyright notice appears in all copies and that both that copyright notice
.\" and this permission notice appear in all copies, and that the names of
.\" Digital and Tektronix not be used in in advertising or publicity pertaining
.\" to this documentation without specific, written prior permission.
.\" Digital and Tektronix makes no representations about the suitability
.\" of this documentation for any purpose.
.\" It is provided ``as is'' without express or implied warranty.
.\" 
.\"
.ds xT X Toolkit Intrinsics \- C Language Interface
.ds xW Athena X Widgets \- C Language X Toolkit Interface
.ds xL Xlib \- C Language X Interface
.ds xC Inter-Client Communication Conventions Manual
.na
.de Ds
.nf
.\\$1D \\$2 \\$1
.ft 1
.\".ps \\n(PS
.\".if \\n(VS>=40 .vs \\n(VSu
.\".if \\n(VS<=39 .vs \\n(VSp
..
.de De
.ce 0
.if \\n(BD .DF
.nr BD 0
.in \\n(OIu
.if \\n(TM .ls 2
.sp \\n(DDu
.fi
..
.de FD
.LP
.KS
.TA .5i 3i
.ta .5i 3i
.nf
..
.de FN
.fi
.KE
.LP
..
.de IN		\" send an index entry to the stderr
..
.de C{
.KS
.nf
.D
.\"
.\"	choose appropriate monospace font
.\"	the imagen conditional, 480,
.\"	may be changed to L if LB is too
.\"	heavy for your eyes...
.\"
.ie "\\*(.T"480" .ft L
.el .ie "\\*(.T"300" .ft L
.el .ie "\\*(.T"202" .ft PO
.el .ie "\\*(.T"aps" .ft CW
.el .ft R
.ps \\n(PS
.ie \\n(VS>40 .vs \\n(VSu
.el .vs \\n(VSp
..
.de C}
.DE
.R
..
.de Pn
.ie t \\$1\fB\^\\$2\^\fR\\$3
.el \\$1\fI\^\\$2\^\fP\\$3
..
.de ZN
.ie t \fB\^\\$1\^\fR\\$2
.el \fI\^\\$1\^\fP\\$2
..
.de hN
.ie t <\fB\\$1\fR>\\$2
.el <\fI\\$1\fP>\\$2
..
.de NT
.ne 7
.ds NO Note
.if \\n(.$>$1 .if !'\\$2'C' .ds NO \\$2
.if \\n(.$ .if !'\\$1'C' .ds NO \\$1
.ie n .sp
.el .sp 10p
.TB
.ce
\\*(NO
.ie n .sp
.el .sp 5p
.if '\\$1'C' .ce 99
.if '\\$2'C' .ce 99
.in +5n
.ll -5n
.R
..
.		\" Note End -- doug kraft 3/85
.de NE
.ce 0
.in -5n
.ll +5n
.ie n .sp
.el .sp 10p
..
.ny0
.TH XLookupKeysym __libmansuffix__ __xorgversion__ "XLIB FUNCTIONS"
.SH NAME
XLookupKeysym, XRefreshKeyboardMapping, XLookupString, XRebindKeysym \- handle keyboard input events in Latin-1
.SH SYNTAX
.HP
KeySym XLookupKeysym(\^XKeyEvent *\fIkey_event\fP\^, int \fIindex\fP\^); 
.HP
int XRefreshKeyboardMapping(\^XMappingEvent *\fIevent_map\fP\^); 
.HP
int XLookupString(\^XKeyEvent *\fIevent_struct\fP\^, char
*\fIbuffer_return\fP\^, int \fIbytes_buffer\fP\^, KeySym
*\fIkeysym_return\fP\^, XComposeStatus *\fIstatus_in_out\fP\^); 
.HP
int XRebindKeysym(\^Display *\fIdisplay\fP\^, KeySym \fIkeysym\fP\^, KeySym
\fIlist\fP\^[\^]\^, int \fImod_count\fP\^, unsigned char *\fIstring\fP\^, int
\fInum_bytes\fP\^); 
.SH ARGUMENTS
.IP \fIbuffer_return\fP 1i
Returns the translated characters.
.IP \fIbytes_buffer\fP 1i
Specifies the length of the buffer.
No more than bytes_buffer of translation are returned.
.IP \fInum_bytes\fP 1i
Specifies the number of bytes in the string argument.
.IP \fIdisplay\fP 1i
Specifies the connection to the X server.
.IP \fIevent_map\fP 1i
Specifies the mapping event that is to be used.
.IP \fIevent_struct\fP 1i
Specifies the key event structure to be used.
You can pass
.ZN XKeyPressedEvent
or
.ZN XKeyReleasedEvent .
.IP \fIindex\fP 1i
Specifies the index into the KeySyms list for the event's KeyCode.
.IP \fIkey_event\fP 1i
Specifies the 
.ZN KeyPress
or
.ZN KeyRelease
event.
.IP \fIkeysym\fP 1i
Specifies the KeySym that is to be \*(Fn.
.IP \fIkeysym_return\fP 1i
Returns the KeySym computed from the event if this argument is not NULL.
.IP \fIlist\fP 1i
Specifies the KeySyms to be used as modifiers.
.IP \fImod_count\fP 1i
Specifies the number of modifiers in the modifier list.
.IP \fIstatus_in_out\fP 1i
Specifies or returns the 
.ZN XComposeStatus 
structure or NULL.
.IP \fIstring\fP 1i
Specifies the string that is copied and will be returned by 
.ZN XLookupString .
.SH DESCRIPTION
The
.ZN XLookupKeysym
function uses a given keyboard event and the index you specified to return
the KeySym from the list that corresponds to the KeyCode member in the
.ZN XKeyPressedEvent
or
.ZN XKeyReleasedEvent
structure.
If no KeySym is defined for the KeyCode of the event,
.ZN XLookupKeysym
returns
.ZN NoSymbol .
.LP
The
.ZN XRefreshKeyboardMapping
function refreshes the stored modifier and keymap information.
You usually call this function when a
.ZN MappingNotify
event with a request member of
.ZN MappingKeyboard
or
.ZN MappingModifier
occurs.
The result is to update Xlib's knowledge of the keyboard.
.LP
The
.ZN XLookupString
function translates a key event to a KeySym and a string.
The KeySym is obtained by using the standard interpretation of the
.ZN Shift ,
.ZN Lock ,
group, and numlock modifiers as defined in the X Protocol specification.
If the KeySym has been rebound (see
.ZN XRebindKeysym ),
the bound string will be stored in the buffer.
Otherwise, the KeySym is mapped, if possible, to an ISO Latin-1 character
or (if the Control modifier is on) to an ASCII control character,
and that character is stored in the buffer.
.ZN XLookupString
returns the number of characters that are stored in the buffer.
.LP
If present (non-NULL),
the
.ZN XComposeStatus
structure records the state,
which is private to Xlib,
that needs preservation across calls to
.ZN XLookupString
to implement compose processing.
The creation of
.ZN XComposeStatus
structures is implementation-dependent;
a portable program must pass NULL for this argument.
.LP
The
.ZN XRebindKeysym
function can be used to rebind the meaning of a KeySym for the client.
It does not redefine any key in the X server but merely
provides an easy way for long strings to be attached to keys.
.ZN XLookupString
returns this string when the appropriate set of
modifier keys are pressed and when the KeySym would have been used for
the translation.
No text conversions are performed;
the client is responsible for supplying appropriately encoded strings.
Note that you can rebind a KeySym that may not exist.
.SH "SEE ALSO"
XButtonEvent(__libmansuffix__),
XMapEvent(__libmansuffix__),
XStringToKeysym(__libmansuffix__),
XkbLookupKeySym(__libmansuffix__),
XkbRefreshKeyboardMapping(__libmansuffix__),
XmbLookupString(__libmansuffix__),
XwcLookupString(__libmansuffix__),
Xutf8LookupString(__libmansuffix__),
Compose(__filemansuffix__)
.br
\fI\*(xL\fP
