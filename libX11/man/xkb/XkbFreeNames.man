'\" t
.\" Copyright 1999 Oracle and/or its affiliates. All rights reserved.
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining a
.\" copy of this software and associated documentation files (the "Software"),
.\" to deal in the Software without restriction, including without limitation
.\" the rights to use, copy, modify, merge, publish, distribute, sublicense,
.\" and/or sell copies of the Software, and to permit persons to whom the
.\" Software is furnished to do so, subject to the following conditions:
.\"
.\" The above copyright notice and this permission notice (including the next
.\" paragraph) shall be included in all copies or substantial portions of the
.\" Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
.\" THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
.\" FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
.\" DEALINGS IN THE SOFTWARE.
.\"
.TH XkbFreeNames __libmansuffix__ __xorgversion__ "XKB FUNCTIONS"
.SH NAME
XkbFreeNames \- Free symbolic names structures
.SH SYNOPSIS
.HP
.B void XkbFreeNames
.BI "(\^XkbDescPtr " "xkb" "\^,"
.BI "unsigned int " "which" "\^,"
.BI "Bool " "free_map" "\^);"
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- xkb
keyboard description for which names are to be freed
.TP
.I \- which
mask of names components to be freed
.TP
.I \- free_map
True => XkbNamesRec structure itself should be freed
.SH DESCRIPTION
.LP
Do not free symbolic names structures directly using 
.I free 
or 
.I XFree. 
Use 
.I XkbFreeNames 
instead.

The 
.I which 
parameter is the bitwise inclusive OR of the valid names mask bits defined in 
Table 1.

Xkb provides several functions that work with symbolic names. Each of these 
functions uses a mask to specify individual fields of the structures described 
above. These masks and their relationships to the fields in a keyboard 
description are shown in Table 1.

.TS
c s s s
l l l l.
Table 1 Symbolic Names Masks
_
Mask Bit	Value	Keyboard	Field
		Component
_
XkbKeycodesNameMask	(1<<0)	Xkb->names	keycodes
XkbGeometryNameMask	(1<<1)	Xkb->names	geometry
XkbSymbolsNameMask	(1<<2)	Xkb->names	symbols
XkbPhysSymbolsNameMask	(1<<3)	Xkb->names	phys_symbols
XkbTypesNameMask	(1<<4)	Xkb->names	type
XkbCompatNameMask	(1<<5)	Xkb->names	compat
XkbKeyTypeNamesMask	(1<<6)	Xkb->map	type[*].name
XkbKTLevelNamesMask	(1<<7)	Xkb->map	type[*].lvl_names[*]
XkbIndicatorNamesMask	(1<<8)	Xkb->names	indicators[*]
XkbKeyNamesMask	(1<<9)	Xkb->names	keys[*], num_keys
XkbKeyAliasesMask	(1<<10)	Xkb->names	key_aliases[*], num_key_aliases
XkbVirtualModNamesMask	(1<<11)	Xkb->names	vmods[*]
XkbGroupNamesMask	(1<<12)	Xkb->names	groups[*]
XkbRGNamesMask	(1<<13)	Xkb->names	radio_groups[*], num_rg
XkbComponentNamesMask	(0x3f)	Xkb->names	keycodes,
			geometry,
			symbols,
			physical symbols,
			types, and
			compatibility map
XkbAllNamesMask	(0x3fff)	Xkb->names	all name components
.TE
