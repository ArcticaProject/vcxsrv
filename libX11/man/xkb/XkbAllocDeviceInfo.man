'\" t
.\" Copyright (c) 1999 - Sun Microsystems, Inc.
.\" All rights reserved.
.\" 
.\" Permission is hereby granted, free of charge, to any person obtaining a
.\" copy of this software and associated documentation files (the
.\" "Software"), to deal in the Software without restriction, including
.\" without limitation the rights to use, copy, modify, merge, publish,
.\" distribute, and/or sell copies of the Software, and to permit persons
.\" to whom the Software is furnished to do so, provided that the above
.\" copyright notice(s) and this permission notice appear in all copies of
.\" the Software and that both the above copyright notice(s) and this
.\" permission notice appear in supporting documentation.
.\" 
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
.\" OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
.\" HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
.\" INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
.\" FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
.\" NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
.\" WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\" 
.\" Except as contained in this notice, the name of a copyright holder
.\" shall not be used in advertising or otherwise to promote the sale, use
.\" or other dealings in this Software without prior written authorization
.\" of the copyright holder.
.\"
.TH XkbAllocDeviceInfo __libmansuffix__ __xorgversion__ "XKB FUNCTIONS"
.SH NAME
XkbAllocDeviceInfo \- Obtain an XkbDeviceInfoRec structure
.SH SYNOPSIS
.B XkbDeviceInfoPtr XkbAllocDeviceInfo
(
.I device_spec,
.I n_buttons,
.I sz_leds
)
.br
      unsigned int \fIdevice_spec\fP\^;
.br
      unsigned int \fIn_buttons\fP\^;
.br
      unsigned int \fIsz_leds\fP\^;
.if n .ti +5n
.if t .ti +.5i
.SH ARGUMENTS
.TP
.I \- device_spec
device ID with which structure will be used
.TP
.I \- n_buttons
number of button actions to allocate space for
.TP
.I \- sz_leds
number of LED feedbacks to allocate space for
.SH DESCRIPTION
.LP
.I XkbAllocDeviceInfo 
allocates space for an XkbDeviceInfoRec structure and initializes that structure's 
.I device_spec 
field with the device ID specified by 
.I device_spec. 
If 
.I n_buttons 
is nonzero, 
.I n_buttons 
XkbActions are linked into the XkbDeviceInfoRec structure and initialized to zero. If 
.I sz_leds 
is nonzero, 
.I sz_leds 
XkbDeviceLedInfoRec structures are also allocated and linked into the XkbDeviceInfoRec structure. If 
you request XkbDeviceLedInfoRec structures be allocated using this request, you must initialize them 
explicitly.

To obtain an XkbDeviceLedInfoRec structure, use 
.I XkbAllocDeviceLedInfo.
.SH STRUCTURES
.LP
Information about X Input Extension devices is transferred between a client program and the Xkb 
extension in an XkbDeviceInfoRec structure:
.nf

    typedef struct {
        char *               name;          /\(** name for device */
        Atom                 type;          /\(** name for class of devices */
        unsigned short       device_spec;   /\(** device of interest */
        Bool                 has_own_state; /\(** True=>this device has its own state */
        unsigned short       supported;     /\(** bits indicating supported capabilities */
        unsigned short       unsupported;   /\(** bits indicating unsupported capabilities */
        unsigned short       num_btns;      /\(** number of entries in btn_acts */
        XkbAction *          btn_acts;      /\(** button actions */
        unsigned short       sz_leds;       /\(** total number of entries in LEDs vector */
        unsigned short       num_leds;      /\(** number of valid entries in LEDs vector */
        unsigned short       dflt_kbd_fb;   /\(** input extension ID of default (core kbd) indicator */
        unsigned short       dflt_led_fb;   /\(** input extension ID of default indicator feedback */
        XkbDeviceLedInfoPtr  leds;          /\(** LED descriptions */
    } XkbDeviceInfoRec, *XkbDeviceInfoPtr;
    

    typedef struct {
        unsigned short      led_class;        /\(** class for this LED device*/
        unsigned short      led_id;           /\(** ID for this LED device */
        unsigned int        phys_indicators;  /\(** bits for which LEDs physically present */
        unsigned int        maps_present;     /\(** bits for which LEDs have maps in maps */
        unsigned int        names_present;    /\(** bits for which LEDs are in names */
        unsigned int        state;            /\(** 1 bit => corresponding LED is on */
        Atom                names[XkbNumIndicators];   /\(** names for LEDs */
        XkbIndicatorMapRec  maps;             /\(** indicator maps for each LED */
    } XkbDeviceLedInfoRec, *XkbDeviceLedInfoPtr;
.fi    
.SH "SEE ALSO"
.BR XkbAllocDeviceLedInfo (__libmansuffix__)
